"""
    Generate
"""
module Generate

using Base.Meta

import Docile

function loadfile(path :: AbstractString, out :: AbstractString)
    storage = task_local_storage()
    prev, path = getpath(path)
    storage[:SOUCE_PATH] = path
    try
        include_string(template(path, out))
    finally
        prev ≡ nothing ? delete!(storage, :SOURCE_PATH) : (storage[:SOURCE_PATH] = prev)
    end
end

function getpath(p)
    prev = Base.source_path(nothing)
    path = prev ≡ nothing ? abspath(p) : joinpath(dirname(prev), p)
    prev, path
end

function template(path, out)
    """
    Lexicon.Generate.@file "$(out)",
    \"\"\"
    $(escape(readall(path)))
    \"\"\"
    """
end

escape(text) = replace(text, "\"\"\"", "\\\"\\\"\\\"")

macro file(args...) atfile(args...) end

function atfile(out, text)
    quote
        open(path(@__FILE__(), $(out)), "w") do io
            println(io, "<!-- Generated by Lexicon.jl -- $(now()) -->\n")
            print(io, $(esc(Docile.Directives.build(:string, text))))
        end
    end
end
atfile(x) = isexpr(x, :tuple) ? atfile(x.args...) : error("Invalid syntax.")

path(file, out) = joinpath(dirname(file), out)

end
